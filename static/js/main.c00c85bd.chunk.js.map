{"version":3,"sources":["serviceWorker.js","components/navi.jsx","components/bar.jsx","components/infocard.jsx","components/header.jsx","components/cardgroup.jsx","components/profile.jsx","components/slideshow.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","React","Component","Bar","AppBar","position","Toolbar","Typography","variant","Button","color","href","InfoCard","className","Card","style","width","Img","src","Body","Title","this","props","title","Text","text","Cardgroup","Profile","Header","user","repos","Footer","Slideshow","Carousel","Item","alt","Caption","App","useState","setName","userName","setUsername","setFollowers","setFollowing","setRepos","setAvatar","useEffect","fetch","then","res","json","data","console","log","setData","name","login","followers","following","public_repos","avatar_url","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yQAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+DCbaC,IAAMC,U,kCCsBVC,E,uKAjBX,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACvB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBAGQ,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,oFAA7B,UACA,kBAACF,EAAA,EAAD,CAAQC,MAAM,WAAd,YAEA,kBAACD,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,oCAA7B,UACA,kBAACF,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,yDAA7B,iB,GAZQV,IAAMC,W,OCgBTU,GCrBMX,IAAMC,U,uKDIvB,OACI,yBAAKW,UAAU,YACb,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UACxB,kBAACF,EAAA,EAAKG,IAAN,CAAUT,QAAQ,MAAMU,IAAI,uBAC5B,kBAACJ,EAAA,EAAKK,KAAN,KACE,kBAACL,EAAA,EAAKM,MAAN,KAAaC,KAAKC,MAAMC,OACxB,kBAACT,EAAA,EAAKU,KAAN,KACGH,KAAKC,MAAMG,a,GAVDxB,IAAMC,YEYdwB,E,uKAXX,OACI,yBAAMb,UAAU,QACZ,kBAAC,EAAD,CAAUU,MAAO,YAAYE,KAAM,gCACnC,kBAAC,EAAD,CAAUF,MAAO,SAASE,KAAM,wBAChC,kBAAC,EAAD,CAAUF,MAAO,WAAWE,KAAM,mC,GANtBxB,IAAMC,W,wBCoBfyB,E,uKAhBX,OACI,kBAACb,EAAA,EAAD,CAAMD,UAAU,eAChB,kBAACC,EAAA,EAAKc,OAAN,eACA,kBAACd,EAAA,EAAKK,KAAN,KACJ,kBAACL,EAAA,EAAKM,MAAN,KAAaC,KAAKC,MAAMO,MAClB,kBAACf,EAAA,EAAKU,KAAN,KACGH,KAAKC,MAAMQ,OAEd,kBAAC,IAAD,CAAQtB,QAAQ,WAAhB,iBAEF,kBAACM,EAAA,EAAKiB,OAAN,CAAalB,UAAU,cAAvB,mB,GAbcZ,IAAMC,W,QC8Cb8B,E,uKA1CX,OACI,kBAACC,EAAA,EAAD,KACN,kBAACA,EAAA,EAASC,KAAV,KACE,yBACErB,UAAU,gBACVK,IAAI,+CACJiB,IAAI,gBAEN,kBAACF,EAAA,EAASG,QAAV,KACE,iDACA,2FAGJ,kBAACH,EAAA,EAASC,KAAV,KACE,yBACErB,UAAU,gBACVK,IAAI,gDACJiB,IAAI,gBAGN,kBAACF,EAAA,EAASG,QAAV,KACE,kDACA,yFAGJ,kBAACH,EAAA,EAASC,KAAV,KACE,yBACErB,UAAU,gBACVK,IAAI,+CACJiB,IAAI,gBAGN,kBAACF,EAAA,EAASG,QAAV,KACE,iDACA,sG,GAvCkBnC,IAAMC,W,MCkDfmC,MAtCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACAC,GADA,aAEmBD,mBAAS,IAF5B,mBAENE,EAFM,KAEIC,EAFJ,OAGqBH,mBAAS,IAH9B,mBAGKI,GAHL,aAIqBJ,mBAAS,IAJ9B,mBAIKK,GAJL,aAKaL,mBAAS,IALtB,mBAKNR,EALM,KAKCc,EALD,OAMeN,mBAAS,IANxB,mBAMEO,GANF,aAOqBP,mBAAS,IAP9B,gCAQaA,mBAAS,OARtB,6BAUbQ,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZG,EAAQH,QAEX,IAEH,IAAMG,EAAU,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WAClErB,EAAQgB,GACRd,EAAYe,GACZd,EAAae,GACbd,EAAae,GACbd,EAASe,GACTd,EAAUe,IAGZ,OACE,kBAAC,IAAMC,WAAP,KACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAShC,KAAQW,EAAUV,MAASA,IACpC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCpCJgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,STqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.c00c85bd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nclass Navi extends React.Component {\r\n  render () {\r\n    return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n    <Navbar.Brand href=\"#home\">Robert Ludwick</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n        <Nav.Link href=\"https://drive.google.com/uc?export=download&id=1SZKGe93ndXtP52V0cufovE6sEC2lkP1J\">Resume</Nav.Link>\r\n        <NavDropdown title=\"Projects\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n      <Nav className=\"mr-right\">\r\n        <Nav.Link href=\"https://github.com/RobertLudwick\">Github</Nav.Link>\r\n        <Nav.Link href=\"https://www.linkedin.com/in/robert-ludwick-473437151/\">Likedin</Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navi;\r\n","import React from 'react'\r\n    import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass Bar extends React.Component {\r\n  render () {\r\n    return (\r\n        <AppBar position=\"static\">\r\n  <Toolbar>\r\n  <Typography variant=\"h6\" >\r\n            Robert Ludwick\r\n          </Typography>\r\n          <Button color=\"inherit\" href=\"https://drive.google.com/uc?export=download&id=1SZKGe93ndXtP52V0cufovE6sEC2lkP1J\">Resume</Button>\r\n          <Button color=\"inherit\">Projects</Button>\r\n          \r\n          <Button color=\"inherit\" href=\"https://github.com/RobertLudwick\">Github</Button>\r\n          <Button color=\"inherit\" href=\"https://www.linkedin.com/in/robert-ludwick-473437151/\">Likedin</Button>\r\n  </Toolbar>\r\n</AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Bar;\r\n\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card' \r\n\r\nclass InfoCard extends React.Component {\r\n  render () {\r\n    \r\n    return (\r\n        <div className=\"distance\">\r\n          <Card style={{ width: '18rem' }}>\r\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n        <Card.Body>\r\n          <Card.Title>{this.props.title}</Card.Title>\r\n          <Card.Text>\r\n            {this.props.text}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n        </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default InfoCard;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card' \r\n\r\nclass Header extends React.Component {\r\n  render () {\r\n    \r\n    return (\r\n        <Card className=\"bg-dark text-white\">\r\n  <Card.Img src=\"/header.jpg\"/>\r\n  <Card.ImgOverlay>\r\n    <Card.Title>Full Stack Developer</Card.Title>\r\n    <Card.Text>\r\n      This is a wider card with supporting text below as a natural lead-in to\r\n      additional content. This content is a little bit longer.\r\n    </Card.Text>\r\n    <Card.Text>Last updated 3 mins ago</Card.Text>\r\n  </Card.ImgOverlay>\r\n</Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport InfoCard from './infocard'\r\n\r\nclass Cardgroup extends React.Component {\r\n  render () {\r\n    return (\r\n        <div  className=\"line\">\r\n            <InfoCard title= \"Front end\" text= \"HTML5 CSS3 JavaScript React\"/>\r\n            <InfoCard title= \"Server\" text= \"NodeJS Flask Django\"/>\r\n            <InfoCard title= \"Database\" text= \"PostgresSQL mySQL MongoDB\" />\r\n        </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default Cardgroup;","import React, { useEffect, useState }  from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card' \r\n\r\nclass Profile extends React.Component {\r\n \r\n  render () {\r\n    return (\r\n        <Card className=\"text-center\">\r\n        <Card.Header>Github</Card.Header>\r\n        <Card.Body>\r\n    <Card.Title>{this.props.user}</Card.Title>\r\n          <Card.Text>\r\n            {this.props.repos}\r\n          </Card.Text>\r\n          <Button variant=\"primary\">Go somewhere</Button>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from 'react' \r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nclass Slideshow extends React.Component {\r\n  \r\n  \r\n  render () {\r\n    \r\n    return (\r\n        <Carousel>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=First slide&bg=373940\"\r\n      alt=\"First slide\"\r\n    />\r\n    <Carousel.Caption>\r\n      <h3>First slide label</h3>\r\n      <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n      alt=\"Third slide\"\r\n    />\r\n\r\n    <Carousel.Caption>\r\n      <h3>Second slide label</h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n      alt=\"Third slide\"\r\n    />\r\n\r\n    <Carousel.Caption>\r\n      <h3>Third slide label</h3>\r\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n</Carousel>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Slideshow;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Navi from './components/navi'\r\nimport Bar from './components/bar'\r\nimport Header from './components/header'\r\nimport Cardgroup from './components/cardgroup'\r\nimport Profile from './components/profile'\r\nimport Slideshow from './components/slideshow'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('');\r\n  const [userName, setUsername] = useState('');\r\n  const [followers, setFollowers] = useState('');\r\n  const [following, setFollowing] = useState('');\r\n  const [repos, setRepos] = useState('');\r\n  const [avatar, setAvatar] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [error, setError] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    fetch('https://api.github.com/users/robertludwick')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        setData(data)\r\n      })\r\n  }, []);\r\n  \r\n  const setData = ({ name, login, followers, following, public_repos, avatar_url}) => {\r\n    setName(name);\r\n    setUsername(login);\r\n    setFollowers(followers);\r\n    setFollowing(following);\r\n    setRepos(public_repos);\r\n    setAvatar(avatar_url);\r\n  }\r\n  \r\n  return (\r\n    <React.StrictMode>\r\n    <Bar />\r\n    <Profile user = {userName} repos = {repos}/>\r\n    <Slideshow />\r\n    <Cardgroup />\r\n  </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Navi from './components/navi'\r\nimport Bar from './components/bar'\r\nimport Header from './components/header'\r\nimport Cardgroup from './components/cardgroup'\r\nimport App from './App'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}